{"version":3,"sources":["Components/layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","Components/test/Test.js","context.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/contacts/EditContact.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","className","to","defaultProps","NotFound","Test","state","text","title","body","fetch","then","response","json","data","setState","this","Component","Context","React","createContext","reducer","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","axios","get","res","value","children","Consumer","TextInputGroup","label","name","placeholder","onChange","error","htmlFor","classnames","AddContact","email","phone","errors","e","target","onSubmit","a","async","preventDefault","newContact","post","console","log","history","push","bind","EditContact","updateContact","match","params","put","Contact","showContactInfo","onShowClick","onDeleteClick","delete","onClick","style","cursor","float","color","marginRight","Contacts","Fragment","key","App","exact","path","component","About","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff8f86e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Header = (props) => {\r\n\r\n    const { branding } = props; // deconstruction => taking 'branding'value out of props\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm \r\n        navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <Link to=\"/\" className=\"navbar-brand\">{branding}</Link>\r\n            </div>\r\n            <div>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">\r\n                        <i className=\"fas fa-home\"/>Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link to=\"/contact/add\" className=\"nav-link\">\r\n                    <i className=\"fas fa-plus\"/>Add</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                    <Link to=\"/about\" className=\"nav-link\">\r\n                    <i className=\"fas fa-question\"/>About</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding: 'deafult branding value'\r\n};\r\n\r\n// validates if correct types are used for properties and outputs it to console if not\r\n// doesn't crash the app...\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n// const headingStyle = {\r\n//     color: 'red', \r\n//     fontSize: '50px'\r\n// }\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default (props) => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            {/* <p>About page paramater id = {props.match.params.id}</p> */}\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page does not exist.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\n// For fake json -> https://jsonplaceholder.typicode.com/\r\n\r\nexport default class Test extends Component {\r\n\r\n    state ={\r\n        text: 'test',\r\n        title: '',\r\n        body: '',\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                    title: data.title,\r\n                    body: data.body\r\n            }));\r\n    }\r\n\r\n    // this method is deprecated, but UNSAFE_ will make it run anyway\r\n    // UNSAFE_componentWilldMount(){\r\n    //       console.log('component will mount...')\r\n    // }\r\n\r\n    // componentDidUpdate(){\r\n    //     console.log('component did update...')\r\n    // }\r\n\r\n    // componentWillReceiveProps(nextProps, nextState){\r\n    //     console.log('componentWillReceiveProps...')\r\n    // }\r\n\r\n    // getSnapshotBeforeUpdate(prevProps, prevState){\r\n    //     return null;\r\n    // }\r\n\r\n    render() {\r\n\r\n        const { title,body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action ) => {\r\n\r\n    switch(action.type){\r\n\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            }\r\n\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                 contacts: [action.payload, ...state.contacts]\r\n             }\r\n\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map( contact => contact.id === action.payload.id \r\n                    ? contact = action.payload : contact)\r\n            }\r\n\r\n        default:\r\n                return state;\r\n\r\n    }\r\n}\r\n\r\nexport class Provider extends Component{\r\n\r\n    state = {\r\n        contacts: [\r\n            // {\r\n            //     id: 1,\r\n            //     name: 'John Doe',\r\n            //     email: 'jdoe@gmail.com',\r\n            //     phone: '555-555-5566',\r\n            // },\r\n            // {\r\n            //     id: 2,\r\n            //     name: 'Karin Doe',\r\n            //     email: 'Kdoe@gmail.com',\r\n            //     phone: '555-222-5500',\r\n            // },\r\n            // {\r\n            //     id: 3,\r\n            //     name: 'Hendrik Doe',\r\n            //     email: 'Hdoe@gmail.com',\r\n            //     phone: '555-333-5566',\r\n            // }\r\n        ],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state,action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n\r\n        this.setState({contacts: res.data});\r\n\r\n        // axios can be used instead of a standard fetch request that is used in Test.js (what is the advantage over fetch... ?)\r\n        // axios.get('https://jsonplaceholder.typicode.com/users')\r\n        // .then(res => this.setState({contacts: res.data}))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames'; // installed via 'npm i classnames'\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error,\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n        <label htmlFor=\"name\">{label}</label>     \r\n        <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n            'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}/>\r\n        {error &&    <div className=\"invalid-feedback\">{error}</div>}\r\n     \r\n    </div>\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default  TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n// import uuid from 'uuid'; / dont need to create id anymore with json placeholder request\r\nimport axios from 'axios';\r\n\r\n/**\r\n * JSON Placeholder: https://jsonplaceholder.typicode.com/\r\n */\r\nexport default class AddContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {},\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n    \r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault(); // prevents submitting to file?\r\n        \r\n        const { name, email, phone, errors} = this.state;\r\n\r\n        if (name ===''){\r\n            this.setState({errors: {name: 'Name is required'}})\r\n            return;\r\n        }\r\n\r\n        if (email ===''){\r\n            this.setState({errors: {email: 'Email is required'}})\r\n            return;\r\n        }\r\n\r\n        if (phone ===''){\r\n            this.setState({errors: {phone: 'Phone is required'}})\r\n            return;\r\n        }\r\n\r\n        // uuid() is a method on the uuid plugin that can be installed via: 'npm i uuid'\r\n        const newContact = {\r\n            // id: uuid(), with json placeholder we dont need to create id ourselves and we get one back\r\n            name,\r\n            email,\r\n            phone,\r\n        };\r\n\r\n        // async version\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n        // axios.post('https://jsonplaceholder.typicode.com/users', newContact)\r\n            // .then(res =>   dispatch({type: 'ADD_CONTACT', payload: res.data}));\r\n        \r\n        // dispatch({type: 'ADD_CONTACT', payload: newContact});\r\n\r\n        // resets the state after contact has been \r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {},\r\n        })\r\n\r\n        console.log(newContact);\r\n        this.props.history.push('/');\r\n    }\r\n \r\n    render() {\r\n\r\n        const { errors, name, email, phone } = this.state;\r\n\r\n        // Value is set on input field which makes it a controlled component so you can't type anything in the input field\r\n        // unless you add an event handler that updates the state\r\n\r\n        return <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n\r\n                return  (\r\n\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Add Contacts</div>\r\n                      <div className=\"card-body\">\r\n                          <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                             <TextInputGroup \r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter name...\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}\r\n                             />\r\n                             <TextInputGroup \r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email...\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                error={errors.email}\r\n                             />\r\n                              <TextInputGroup \r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                type=\"phone\"\r\n                                placeholder=\"Enter phone...\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}\r\n                                \r\n                             />\r\n                             \r\n                              <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                          </form>\r\n                      </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\n// import uuid from 'uuid'; / dont need to create id anymore with json placeholder request\r\nimport axios from 'axios';\r\n\r\n/**\r\n * JSON Placeholder: https://jsonplaceholder.typicode.com/\r\n */\r\nexport default class EditContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {},\r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n    \r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault(); // prevents submitting to file?\r\n        \r\n        const { name, email, phone, errors} = this.state;\r\n\r\n        if (name ===''){\r\n            this.setState({errors: {name: 'Name is required'}})\r\n            return;\r\n        }\r\n\r\n        if (email ===''){\r\n            this.setState({errors: {email: 'Email is required'}})\r\n            return;\r\n        }\r\n\r\n        if (phone ===''){\r\n            this.setState({errors: {phone: 'Phone is required'}})\r\n            return;\r\n        }\r\n\r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id} = this.props.match.params; \r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n        \r\n        dispatch({\r\n            type: 'UPDATE_CONTACT', payload: res.data\r\n        })\r\n\r\n\r\n        // resets the state after contact has been \r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {},\r\n        })\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone,\r\n        })\r\n    }\r\n \r\n    render() {\r\n\r\n        const { errors, name, email, phone } = this.state;\r\n\r\n        // Value is set on input field which makes it a controlled component so you can't type anything in the input field\r\n        // unless you add an event handler that updates the state\r\n\r\n        return <Consumer>\r\n            {value => {\r\n                const { dispatch } = value;\r\n\r\n                return  (\r\n\r\n                    <div className=\"card mb-3\">\r\n                        <div className=\"card-header\">Edit Contacts</div>\r\n                      <div className=\"card-body\">\r\n                          <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                             <TextInputGroup \r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter name...\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}\r\n                             />\r\n                             <TextInputGroup \r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email...\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                error={errors.email}\r\n                             />\r\n                              <TextInputGroup \r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                type=\"phone\"\r\n                                placeholder=\"Enter phone...\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}\r\n                                \r\n                             />\r\n                             \r\n                              <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                          </form>\r\n                      </div>\r\n                    </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './contact.css';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default class Contact extends Component {\r\n\r\n    // prop type definition can be don either here in-class our outside like you see below\r\n    static propTypes = {\r\n        // name: PropTypes.string.isRequired,\r\n        // email: PropTypes.string.isRequired,\r\n        // phone: PropTypes.string.isRequired,\r\n        contact: PropTypes.object.isRequired,\r\n        // deleteClickHandler: PropTypes.func.isRequired,\r\n    }\r\n\r\n    state = {\r\n        showContactInfo: false,\r\n    }\r\n\r\n    onShowClick = (id , e) => {\r\n          \r\n            this.setState({\r\n                showContactInfo: !this.state.showContactInfo\r\n            });\r\n\r\n            console.log(id + this.state.showContactInfo);\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n\r\n        // async version\r\n        try {\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        } catch (e){\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }\r\n\r\n        // axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n            // .then(res =>  dispatch({type: 'DELETE_CONTACT', payload: id}))\r\n\r\n        // console.log(\"clicked\");\r\n        // this.props.deleteClickHandler(); \r\n       \r\n    };\r\n\r\n    render() {\r\n\r\n        // deconstruction of the props enables you to \r\n        // use 'name', ' email', 'phone' directly within JSX instead of refering to it via 'this.props.xxx'\r\n        const { id, name, email, phone} = this.props.contact; \r\n        const { showContactInfo} = this.state; \r\n\r\n        return (\r\n\r\n            // You need the consumer in order to access the stuff from context.js\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4>{name} \r\n                        <i  onClick={this.onShowClick.bind(this,name)} \r\n                            className=\"fas fa-sort-down\" \r\n                            style={{ cursor: 'pointer'}}/>\r\n                          <i className=\"fas fa-times\"\r\n                            style={{ \r\n                                cursor: 'pointer', \r\n                                  float: 'right', \r\n                                     color: 'red'}}\r\n                            onClick={this.onDeleteClick.bind(this, id , dispatch)} />\r\n\r\n                            <Link to={`contact/edit/${id}`}>\r\n                                <i className=\"fas fa-pencil-alt\"\r\n                                style={{\r\n                                    cursor: 'pointer',\r\n                                    float: 'right',\r\n                                    color: 'black',\r\n                                    marginRight: '1rem'\r\n                                }}>\r\n\r\n                                </i>\r\n                            </Link>\r\n                        </h4>\r\n                        {showContactInfo ? (\r\n                        <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">{email}</li>\r\n                        <li className=\"list-group-item\">{phone}</li>\r\n                        </ul> ) : null}\r\n                    </div>\r\n                    )\r\n                } }\r\n            </Consumer>\r\n\r\n           \r\n  \r\n        )\r\n    }\r\n}\r\n\r\n// Contact.propTypes = {\r\n//     name: PropTypes.string.isRequired,\r\n//     email: PropTypes.string.isRequired,\r\n//     phone: PropTypes.string.isRequired,\r\n// }\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact'\r\nimport { Consumer } from '../../context';\r\n\r\nexport default class Contacts extends Component {\r\n\r\n\r\n    render() {  \r\n\r\n        return (\r\n            <Consumer>\r\n                {value => { \r\n\r\n                    const { contacts } = value;\r\n                    \r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact </span>List\r\n                            </h1>\r\n                        {contacts.map(contact => \r\n                            <Contact \r\n                                key={contact.id}\r\n                                contact={contact}\r\n                        />\r\n                        )}\r\n                    </React.Fragment>\r\n                    )\r\n                }} \r\n            </Consumer>\r\n        )      \r\n    }\r\n}\r\n","import React from 'react';\nimport Header from './Components/layout/Header';\nimport About from './Components/pages/About';\nimport NotFound from './Components/pages/NotFound';\nimport Test from './Components/test/Test';\nimport AddContact from './Components/contacts/AddContact';\nimport EditContact from './Components/contacts/EditContact';\nimport Contacts from './Components/contacts/Contacts';\nimport { Provider } from './context';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'; // npm i react-router-dom\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// CHECK OUT https://material-ui.com/getting-started/usage/ !!! \n \nfunction App() {\n  return (\n    <Provider>\n      <Router>\n      <div className=\"App\">\n      <Header branding=\"contact manager\"/>\n      <div className=\"container\">\n        <Switch>\n        <Route exact path=\"/\" component={Contacts} />\n        <Route exact path=\"/contact/add\" component={AddContact} />\n        <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n        {/* <Route exact path=\"/about/:id\" component={About} /> */} // add /:id if you want to pass params to te respective page\n        <Route exact path=\"/about/:id\" component={About} />\n        <Route exact path=\"/test\" component={Test} />\n        <Route component={NotFound} />\n        </Switch>\n{/* \n        <AddContact/>\n        <Contacts /> */}\n\n        {/* <Contact name='rik' email='something@gmail.com' phone='555-555-5555'/> */}\n        {/* <Contact name='someone' email='someone@gmail.com' phone='555-444-2222'/> */}\n      </div>\n      \n      </div> \n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}